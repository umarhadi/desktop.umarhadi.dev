class TVMPNDMScheduler{constructor(t,e,s,i,o){function n(t,e,o){for(let n=0;n<o.length;++n)t.push(s.detachFromCurrentScope(s.empty([],e,i).copyFrom([o[n]])))}this.timestep=[],this.sampleCoeff=[],this.alphaDiff=[],this.modelOutputDenomCoeff=[],this.ets=[],this.schedulerFunc=[],this.currSample=void 0,this.tvm=s,n(this.timestep,"int32",t.timesteps),n(this.sampleCoeff,"float32",t.sample_coeff),n(this.alphaDiff,"float32",t.alpha_diff),n(this.modelOutputDenomCoeff,"float32",t.model_output_denom_coeff);for(let t=0;t<4;++t)this.ets.push(this.tvm.detachFromCurrentScope(this.tvm.empty(e,"float32",i)));for(let t=0;t<5;++t)this.schedulerFunc.push(s.detachFromCurrentScope(o.getFunction("pndm_scheduler_step_"+t.toString())))}dispose(){for(let t=0;t<this.timestep.length;++t)this.timestep[t].dispose(),this.sampleCoeff[t].dispose(),this.alphaDiff[t].dispose(),this.modelOutputDenomCoeff[t].dispose();for(let t=0;t<this.schedulerFunc.length;++t)this.schedulerFunc[t].dispose();this.currSample&&this.currSample.dispose();for(let t=0;t<this.ets.length;++t)this.ets[t].dispose()}step(t,e,s){1!=s&&(this.ets.shift(),this.ets.push(this.tvm.detachFromCurrentScope(t))),0==s?this.currSample=this.tvm.detachFromCurrentScope(e):1==s&&(e=this.tvm.attachToCurrentScope(this.currSample),this.currSample=void 0);const i=s<4?s:4;return this.schedulerFunc[i](e,t,this.sampleCoeff[s],this.alphaDiff[s],this.modelOutputDenomCoeff[s],this.ets[0],this.ets[1],this.ets[2],this.ets[3])}}class TVMDPMSolverMultistepScheduler{constructor(t,e,s,i,o){function n(t,e,o){for(let n=0;n<o.length;++n)t.push(s.detachFromCurrentScope(s.empty([],e,i).copyFrom([o[n]])))}this.timestep=[],this.alpha=[],this.sigma=[],this.c0=[],this.c1=[],this.c2=[],this.lastModelOutput=void 0,this.convertModelOutputFunc=void 0,this.stepFunc=void 0,this.tvm=s,n(this.timestep,"int32",t.timesteps),n(this.alpha,"float32",t.alpha),n(this.sigma,"float32",t.sigma),n(this.c0,"float32",t.c0),n(this.c1,"float32",t.c1),n(this.c2,"float32",t.c2),this.lastModelOutput=this.tvm.detachFromCurrentScope(this.tvm.empty(e,"float32",i)),this.convertModelOutputFunc=s.detachFromCurrentScope(o.getFunction("dpm_solver_multistep_scheduler_convert_model_output")),this.stepFunc=s.detachFromCurrentScope(o.getFunction("dpm_solver_multistep_scheduler_step"))}dispose(){for(let t=0;t<this.timestep.length;++t)this.timestep[t].dispose(),this.alpha[t].dispose(),this.sigma[t].dispose(),this.c0[t].dispose(),this.c1[t].dispose(),this.c2[t].dispose();this.lastModelOutput.dispose(),this.convertModelOutputFunc.dispose(),this.stepFunc.dispose()}step(t,e,s){t=this.convertModelOutputFunc(e,t,this.alpha[s],this.sigma[s]);const i=this.stepFunc(e,t,this.lastModelOutput,this.c0[s],this.c1[s],this.c2[s]);return this.lastModelOutput=this.tvm.detachFromCurrentScope(t),i}}class StableDiffusionPipeline{constructor(t,e,s,i){if(null==i)throw Error("Expect cacheMetadata");this.tvm=t,this.tokenizer=e,this.maxTokenLength=77,this.logger=globalThis.tvmjsGlobalEnv.logger||console.log,this.device=this.tvm.webgpu(),this.tvm.bindCanvas(globalThis.tvmjsGlobalEnv.canvas),this.vm=this.tvm.detachFromCurrentScope(this.tvm.createVirtualMachine(this.device)),this.schedulerConsts=s,this.clipToTextEmbeddings=this.tvm.detachFromCurrentScope(this.vm.getFunction("clip")),this.clipParams=this.tvm.detachFromCurrentScope(this.tvm.getParamsFromCache("clip",i.clipParamSize)),this.unetLatentsToNoisePred=this.tvm.detachFromCurrentScope(this.vm.getFunction("unet")),this.unetParams=this.tvm.detachFromCurrentScope(this.tvm.getParamsFromCache("unet",i.unetParamSize)),this.vaeToImage=this.tvm.detachFromCurrentScope(this.vm.getFunction("vae")),this.vaeParams=this.tvm.detachFromCurrentScope(this.tvm.getParamsFromCache("vae",i.vaeParamSize)),this.imageToRGBA=this.tvm.detachFromCurrentScope(this.vm.getFunction("image_to_rgba")),this.concatEmbeddings=this.tvm.detachFromCurrentScope(this.vm.getFunction("concat_embeddings"))}dispose(){this.concatEmbeddings.dispose(),this.imageToRGBA.dispose(),this.vaeParams.dispose(),this.vaeToImage.dispose(),this.unetParams.dispose(),this.unetLatentsToNoisePred.dispose(),this.clipParams.dispose(),this.clipToTextEmbeddings.dispose(),this.vm.dispose()}tokenize(t){const e=this.tokenizer.encode(t,!0).input_ids,s=new Int32Array(this.maxTokenLength);if(e.length<this.maxTokenLength){s.set(e);const t=e[e.length-1];s.fill(t,e.length,s.length)}else s.set(e.slice(0,this.maxTokenLength));return this.tvm.empty([1,this.maxTokenLength],"int32",this.device).copyFrom(s)}async asyncLoadWebGPUPiplines(){await this.tvm.asyncLoadWebGPUPiplines(this.vm.getInternalModule())}async generate(t,e="",s=void 0,i=0,o=-1,n=10){this.tvm.beginScope();const h=[1,4,64,64];var a;0==i?(scheduler=new TVMDPMSolverMultistepScheduler(this.schedulerConsts[0],h,this.tvm,this.device,this.vm),a=this.schedulerConsts[0].num_steps):(scheduler=new TVMPNDMScheduler(this.schedulerConsts[1],h,this.tvm,this.device,this.vm),a=this.schedulerConsts[1].num_steps);const r=a+2;void 0!==s&&s("clip",0,1,r);const c=this.tvm.withNewScope((()=>{let s=this.tokenize(t),i=this.tokenize(e);const o=this.clipToTextEmbeddings(s,this.clipParams),n=this.clipToTextEmbeddings(i,this.clipParams);return this.tvm.detachFromCurrentScope(this.concatEmbeddings(n,o))})),l=Math.sqrt(12)/2;let m,p=this.tvm.detachFromCurrentScope(this.tvm.uniform(h,-l,l,this.tvm.webgpu()));this.tvm.endScope(),-1!=o&&(this.tvm.withNewScope((()=>{const t=this.vaeToImage(p,this.vaeParams);this.tvm.showImage(this.imageToRGBA(t))})),await this.device.sync()),o=-1==o?a:o;for(let t=0;t<a;++t){void 0!==s&&s("unet",t,a,r);const e=scheduler.timestep[t],i=this.tvm.withNewScope((()=>{this.tvm.attachToCurrentScope(p);const s=this.unetLatentsToNoisePred(p,e,c,this.unetParams);return this.tvm.detachFromCurrentScope(scheduler.step(s,p,t))}));p=i,void 0!==m&&await m,m=this.device.sync(),(t+1)%o==0&&t+1!=a&&t>=n&&(this.tvm.withNewScope((()=>{const t=this.vaeToImage(p,this.vaeParams);this.tvm.showImage(this.imageToRGBA(t))})),await this.device.sync())}scheduler.dispose(),c.dispose(),void 0!==s&&s("vae",0,1,r),this.tvm.withNewScope((()=>{const t=this.vaeToImage(p,this.vaeParams);this.tvm.showImage(this.imageToRGBA(t))})),p.dispose(),await this.device.sync(),void 0!==s&&s("vae",1,1,r)}clearCanvas(){this.tvm.clearCanvas()}}class StableDiffusionInstance{constructor(){this.tvm=void 0,this.pipeline=void 0,this.config=void 0,this.generateInProgress=!1,this.logger=globalThis.tvmjsGlobalEnv.logger||console.log}async#t(t,e){if(void 0!==this.tvm)return;this.logger=globalThis.tvmjsGlobalEnv.logger||console.log;const s=await(await fetch(t)).arrayBuffer(),i=await tvmjs.instantiate(new Uint8Array(s),new EmccWASI,this.logger);try{const t=await tvmjs.detectGPUDevice();if(void 0===t)throw this.logger("[error]","This browser env do not support WebGPU"),this.reset(),Error("This browser env do not support WebGPU");var o="WebGPU";0!=t.adapterInfo.description.length?o+=" - "+t.adapterInfo.description:o+=" - "+t.adapterInfo.vendor,this.logger("[init]","Initialize GPU device: "+o),i.initWebGPU(t.device)}catch(t){throw this.logger("[error]","Find an error initializing the WebGPU device "+t.toString()),console.log(t),this.reset(),Error("Find an error initializing WebGPU: "+t.toString())}this.tvm=i;i.registerInitProgressCallback((t=>{this.logger("[init]",t.text)})),await i.fetchNDArrayCache(e,i.webgpu())}async#e(t,e){if(null==this.tvm)throw Error("asyncInitTVM is not called");if(void 0!==this.pipeline)return;var s=[];for(let e=0;e<t.length;++e)s.push(await(await fetch(t[e])).json());const i=await tvmjsGlobalEnv.getTokenizer(e);this.pipeline=this.tvm.withNewScope((()=>new StableDiffusionPipeline(this.tvm,i,s,this.tvm.cacheMetadata))),await this.pipeline.asyncLoadWebGPUPiplines()}async#s(){void 0===this.config&&(this.config=await(await fetch("/Program Files/StableDiffusion/config.json")).json())}#i(){const t=performance.now();return(e,s,i,o)=>{const n=(performance.now()-t)/1e3;let h="At stage "+e;"unet"==e&&(h+=" step ["+(s+=1)+"/"+i+"]"),"vae"==e&&(s=o),h+=", "+Math.ceil(n)+" secs elapsed.",this.logger("[generating]",h)}}async asyncInit(){void 0===this.pipeline&&(await this.#s(),await this.#t(this.config.wasmUrl,this.config.cacheUrl),await this.#e(this.config.schedulerConstUrl,this.config.tokenizer))}async asyncInitOnRPCServerLoad(t){if(void 0!==this.tvm)throw Error("Cannot reuse a loaded instance for rpc");this.tvm=t,this.tvm.beginScope(),this.tvm.registerAsyncServerFunc("generate",(async(t,e,s)=>{await this.pipeline.generate(t,"",this.#i(),e,s)})),this.tvm.registerAsyncServerFunc("clearCanvas",(async()=>{this.tvm.clearCanvas()})),this.tvm.registerAsyncServerFunc("showImage",(async t=>{this.tvm.showImage(t)})),this.tvm.endScope()}async generate(){if(this.requestInProgress)console.log("Request in progress, generate request ignored");else{this.requestInProgress=!0;try{await this.asyncInit(),tvmjsGlobalEnv.prompts=tvmjsGlobalEnv.prompts||[];const t=Math.floor(Math.random()*tvmjsGlobalEnv.prompts.length),[e="",s=""]=tvmjsGlobalEnv.prompts[t],i=0,o=-1;console.log("prompt",e+(s?" (Negative: "+s+")":"")),await this.pipeline.generate(e,s,this.#i(),i,o)}catch(t){this.logger("[error]",t.toString()),console.log(t),this.reset()}this.requestInProgress=!1}}reset(){this.tvm=void 0,void 0!==this.pipeline&&this.pipeline.dispose(),this.pipeline=void 0}}localStableDiffusionInst=new StableDiffusionInstance,tvmjsGlobalEnv.asyncOnGenerate=async function(){await localStableDiffusionInst.generate()},tvmjsGlobalEnv.asyncOnRPCServerLoad=async function(t){const e=new StableDiffusionInstance;await e.asyncInitOnRPCServerLoad(t)};